{"version":3,"sources":["helper.js","services/auth.service.js","services/auth-header.js","components/login.component.js","components/Reset.component.js","components/Changepassword.component.js","components/register.component.js","components/Completeregister.component.js","components/home.component.js","components/profile.component.js","services/user.service.js","components/board-user.component.js","components/board-moderator.component.js","components/board-admin.component.js","App.js","serviceWorker.js","index.js"],"names":["AUTH_TOKEN","window","location","host","API_URL","username","password","console","log","Authorization","fetch","headers","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","firstname","email","axios","post","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeEmail","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","logIn","res","history","push","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","name","onChange","validations","to","disabled","style","display","Component","login","reload","ChangePassword","validateForm","oldpassword","confirmpassword","gohome","handlePassword","onPassword","onOldPassword","onConfirmPassword","redirect","userReady","currentUser","getCurrentUser","changepassword","onClick","isEmail","vfirstname","vpassword","Register","handleRegister","onChangefirstname","successful","register","Home","logOut","substring","substr","id","roles","map","index","key","Profile","domain","env_test","siteUrl","API","WP","VER","get","BoardUser","content","UserService","getUserBoard","BoardModerator","getModeratorBoard","BoardAdmin","getAdminBoard","App","showModeratorBoard","showAdminBoard","undefined","user","includes","logout","href","exact","path","component","Reset","Changepassword","CompleteRegister","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7f2b6df3.chunk.js","sourcesContent":["export const AUTH_TOKEN = window.location.host + '/AUTH_TOKEN';\r\n\r\nexport const getUserSnippet = username => {\r\n  debugger\r\n  let initials = '';\r\n  if (!username) {\r\n    return initials;\r\n  }\r\n\r\n  const fullname = username.split(' ');\r\n  const initialLetters = fullname.map(name => name.substring(0, 1));\r\n  [initials] = initialLetters;\r\n  if (initialLetters[1]) {\r\n    initials  += initialLetters[1];\r\n  }\r\n\r\n  return initials.toUpperCase();\r\n}","import axios from \"axios\";\r\nimport authHeader from './auth-header';\r\n// const API_URL = \"http://localhost/wp-json/jwt-auth/v1/token/\";\r\n// import { domain, API } from '../config/app.json'\r\nimport { AUTH_TOKEN } from '../helper';\r\n\r\n// const API_URL = domain.env_test.siteUrl + API.WP;\r\nconst API_URL = \"http://scriptophobia.com/wp-json/jwt-auth/v1/\"\r\n\r\nclass AuthService {\r\n  logIn(username, password) {\r\n    console.log(username, password, 'logIn page API');\r\n    console.log('Auth info => ' , authHeader());\r\n    console.log('api url => ' , API_URL);\r\n\r\n    return fetch(API_URL + \"token/\", {\r\n        \r\n        username : username,\r\n        password : password\r\n      }, { headers: authHeader() })\r\n      .then(response => {\r\n        \r\n        console.log(response);\r\n        console.log('I am here.');\r\n       \r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(AUTH_TOKEN, JSON.stringify(response.data));\r\n          // return true;\r\n        }else{\r\n          // return false;\r\n        }\r\n        debugger;\r\n        // return response.data;\r\n      });\r\n  }\r\n\r\n  logOut() {\r\n    localStorage.removeItem(AUTH_TOKEN);\r\n  }\r\n\r\n  register(firstname, email, password) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      firstname,\r\n      email,\r\n      password\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem(AUTH_TOKEN));;\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","\r\nexport default function authHeader() {\r\n\r\n  return { \r\n    'Access-Control-Allow-Origin': '*',\r\n    'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\r\n    \"Accept\": 'application/json; charset=utf-8',\r\n    \"alg\" : \"HS256\", \"typ\" : \"JWT\",\r\n    Authorization : 'Bearer c2?2G>K?GT@oh|FzeuvZ;+X,WCdb V(mqM-@hV48.:X+oxzOkm0kzl!&j4<6t-M>',\r\n \r\n    }; \r\n}\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n\r\n      AuthService\r\n      .logIn(this.state.email, this.state.password)\r\n      .then(\r\n        (res) => {\r\n          console.log(res);\r\n\r\n          this.props.history.push(\"/profile\");\r\n          // window.location.reload();\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.onChangeEmail}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <Link to=\"/login/reset\">Forgot password?</Link>\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n  \r\n    this.state = {\r\n      email: \"\",\r\n      loading: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.login( this.state.email ).then(\r\n        () => {\r\n          this.props.history.push(\"/profile\");\r\n          window.location.reload();\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.onChangeEmail}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n        \r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class ChangePassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handlePassword = this.handlePassword.bind(this);\r\n    this.onPassword = this.onPassword.bind(this);\r\n    this.onOldPassword = this.onOldPassword.bind(this);\r\n    this.onConfirmPassword = this.onConfirmPassword.bind(this);\r\n   \r\n    this.state = {\r\n      redirect : \"\",\r\n      userReady: false,\r\n      password: \"\",\r\n      oldpassword: \"\",\r\n      confirmpassword: \"\",\r\n      message: \"\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const currentUser = AuthService.getCurrentUser();\r\n    console.log(currentUser);\r\n    if (!currentUser) {\r\n      this.setState({ redirect: \"/home\" });\r\n      // this.props.history.push(\"/home\");\r\n      // window.location.reload();\r\n    }\r\n \r\n    this.setState({ currentUser: currentUser, userReady: true })\r\n  }\r\n\r\n  onPassword(e) {\r\n    console.log(this);\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  onOldPassword(e) {\r\n    this.setState({\r\n      oldpassword: e.target.value\r\n    });\r\n  }\r\n  onConfirmPassword(e) {\r\n    this.setState({\r\n      confirmpassword: e.target.value\r\n    });\r\n  }\r\n  validateForm = () => {\r\n    return (\r\n      this.state.oldpassword.length > 0 &&\r\n      this.state.password.length > 0 &&\r\n      this.state.password === this.state.confirmpassword\r\n    );\r\n  }\r\n  gohome = () => {\r\n    this.props.history.push(\"/profile\");\r\n    window.location.reload();\r\n  }\r\n  handlePassword(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n    console.log(this.validateForm());\r\n    if (!this.validateForm()){\r\n      this.setState({\r\n        loading: false\r\n      });\r\n      return;\r\n    }\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.changepassword(this.state.currentUser, this.state.oldpassword, this.state.password).then(\r\n        () => {\r\n          this.props.history.push(\"/profile\");\r\n          window.location.reload();\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      console.log(this.state.redirect)\r\n      // return <Redirect to={this.state.redirect} />\r\n    }\r\n\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        {(this.state.userReady) ?\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handlePassword}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"oldpassword\">Old Password</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"oldpassword\"\r\n                value={this.state.oldpassword}\r\n                onChange={this.onOldPassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">New password</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onPassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"confirmpassword\">Confirm Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"confirmpassword\"\r\n                value={this.state.confirmpassword}\r\n                onChange={this.onConfirmPassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n            \r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Change Password</span>\r\n              </button>\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                onClick={this.gohome}\r\n              >\r\n                <span>Cancel</span>\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>: null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vfirstname = value => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The firstname must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangefirstname = this.onChangefirstname.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      firstname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      successful: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangefirstname(e) {\r\n    this.setState({\r\n      firstname: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.register(\r\n        this.state.firstname,\r\n        this.state.email,\r\n        this.state.password\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"firstname\">Firstname</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"firstname\"\r\n                    value={this.state.firstname}\r\n                    onChange={this.onChangefirstname}\r\n                    validations={[required, vfirstname]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class ChangePassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handlePassword = this.handlePassword.bind(this);\r\n    this.onPassword = this.onPassword.bind(this);\r\n    this.onOldPassword = this.onOldPassword.bind(this);\r\n    this.onConfirmPassword = this.onConfirmPassword.bind(this);\r\n   \r\n    this.state = {\r\n      redirect : \"\",\r\n      userReady: false,\r\n      password: \"\",\r\n      oldpassword: \"\",\r\n      confirmpassword: \"\",\r\n      message: \"\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const currentUser = AuthService.getCurrentUser();\r\n    console.log(currentUser);\r\n    if (!currentUser) {\r\n      this.setState({ redirect: \"/home\" });\r\n      // this.props.history.push(\"/home\");\r\n      // window.location.reload();\r\n    }\r\n \r\n    this.setState({ currentUser: currentUser, userReady: true })\r\n  }\r\n\r\n  onPassword(e) {\r\n    console.log(this);\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  onOldPassword(e) {\r\n    this.setState({\r\n      oldpassword: e.target.value\r\n    });\r\n  }\r\n  onConfirmPassword(e) {\r\n    this.setState({\r\n      confirmpassword: e.target.value\r\n    });\r\n  }\r\n  validateForm = () => {\r\n    return (\r\n      this.state.oldpassword.length > 0 &&\r\n      this.state.password.length > 0 &&\r\n      this.state.password === this.state.confirmpassword\r\n    );\r\n  }\r\n  gohome = () => {\r\n    this.props.history.push(\"/profile\");\r\n    window.location.reload();\r\n  }\r\n  handlePassword(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n    console.log(this.validateForm());\r\n    if (!this.validateForm()){\r\n      this.setState({\r\n        loading: false\r\n      });\r\n      return;\r\n    }\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.changepassword(this.state.currentUser, this.state.oldpassword, this.state.password).then(\r\n        () => {\r\n          this.props.history.push(\"/profile\");\r\n          window.location.reload();\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      console.log(this.state.redirect)\r\n      // return <Redirect to={this.state.redirect} />\r\n    }\r\n\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        {(this.state.userReady) ?\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handlePassword}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"oldpassword\">Old Password</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"oldpassword\"\r\n                value={this.state.oldpassword}\r\n                onChange={this.onOldPassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">New password</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onPassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"confirmpassword\">Confirm Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"confirmpassword\"\r\n                value={this.state.confirmpassword}\r\n                onChange={this.onConfirmPassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n            \r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Change Password</span>\r\n              </button>\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                onClick={this.gohome}\r\n              >\r\n                <span>Cancel</span>\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>: null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      redirect: null,\r\n      userReady: false,\r\n      currentUser: { username: \"\" }\r\n    };\r\n  }\r\n \r\n  componentDidMount() {\r\n    const currentUser = AuthService.getCurrentUser();\r\n\r\n    if (!currentUser) {\r\n      AuthService.logOut();\r\n      // this.setState({ redirect: \"/home\" });\r\n    }else{\r\n      this.setState({ currentUser: currentUser, userReady: true })\r\n    }\r\n    \r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.redirect} />\r\n    }\r\n\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {(this.state.userReady) ?\r\n        <div>\r\n        <header className=\"jumbotron\">\r\n          <h3>\r\n            <strong>{currentUser.username}</strong> Profile\r\n          </h3>\r\n        </header>\r\n        <p>\r\n          <strong>Token:</strong>{\" \"}\r\n          {currentUser.accessToken.substring(0, 20)} ...{\" \"}\r\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n        </p>\r\n        <p>\r\n          <strong>Id:</strong>{\" \"}\r\n          {currentUser.id}\r\n        </p>\r\n        <p>\r\n          <strong>Email:</strong>{\" \"}\r\n          {currentUser.email}\r\n        </p>\r\n        <strong>Authorities:</strong>\r\n        <ul>\r\n          {currentUser.roles &&\r\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n        </ul>\r\n      </div>: \r\n      <div className=\"lander\">\r\n        <h1>Scratch</h1>\r\n        <p>A simple note taking app</p>\r\n        <div>\r\n          <Link to=\"/login\" className=\"btn btn-info btn-lg\">\r\n            Login\r\n          </Link>\r\n          <Link to=\"/signup\" className=\"btn btn-success btn-lg\">\r\n            Signup\r\n          </Link>\r\n        </div>\r\n      </div>\r\n       \r\n      }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      redirect: null,\r\n      userReady: false,\r\n      currentUser: { username: \"\" }\r\n    };\r\n  }\r\n \r\n  componentDidMount() {\r\n    const currentUser = AuthService.getCurrentUser();\r\n\r\n    if (!currentUser) this.setState({ redirect: \"/home\" });\r\n    this.setState({ currentUser: currentUser, userReady: true })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.redirect} />\r\n    }\r\n\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {(this.state.userReady) ?\r\n        <div>\r\n        <header className=\"jumbotron\">\r\n          <h3>\r\n            <strong>{currentUser.username}</strong> Profile\r\n          </h3>\r\n        </header>\r\n        <p>\r\n          <strong>Token:</strong>{\" \"}\r\n          {currentUser.accessToken.substring(0, 20)} ...{\" \"}\r\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n        </p>\r\n        <p>\r\n          <strong>Id:</strong>{\" \"}\r\n          {currentUser.id}\r\n        </p>\r\n        <p>\r\n          <strong>Email:</strong>{\" \"}\r\n          {currentUser.email}\r\n        </p>\r\n        <strong>Authorities:</strong>\r\n        <ul>\r\n          {currentUser.roles &&\r\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n        </ul>\r\n      </div>: null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nimport { domain, API } from '../config/app.json'\r\n// import { AUTH_TOKEN } from '../helper';\r\nconst API_URL = domain.env_test.siteUrl + API.WP + API.VER;\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    console.log(API_URL)\r\n    return axios.get( API_URL );\r\n  }\r\n\r\n  getUserBoard() {\r\n    return axios.get(API_URL + 'user', { headers: authHeader() });\r\n  }\r\n\r\n  getModeratorBoard() {\r\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getUserBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardModerator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getModeratorBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getAdminBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nimport Login from \"./components/login.component\";\r\nimport Reset from \"./components/Reset.component\";\r\nimport Changepassword from \"./components/Changepassword.component\";\r\nimport Register from \"./components/register.component\";\r\nimport CompleteRegister from \"./components/Completeregister.component\";\r\nimport Home from \"./components/home.component\";\r\nimport Profile from \"./components/profile.component\";\r\nimport BoardUser from \"./components/board-user.component\";\r\nimport BoardModerator from \"./components/board-moderator.component\";\r\nimport BoardAdmin from \"./components/board-admin.component\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      showModeratorBoard: false,\r\n      showAdminBoard: false,\r\n      currentUser: undefined\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\r\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\")\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n  }\r\n\r\n  render() {\r\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\r\n\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n            <Link to={\"/\"} className=\"navbar-brand\">\r\n              bezKoder\r\n            </Link>\r\n            <div className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/home\"} className=\"nav-link\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n\r\n              {showModeratorBoard && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/mod\"} className=\"nav-link\">\r\n                    Moderator Board\r\n                  </Link>\r\n                </li>\r\n              )}\r\n\r\n              {showAdminBoard && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/admin\"} className=\"nav-link\">\r\n                    Admin Board\r\n                  </Link>\r\n                </li>\r\n              )}\r\n\r\n              {currentUser && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/user\"} className=\"nav-link\">\r\n                    User\r\n                  </Link>\r\n                </li>\r\n              )}\r\n            </div>\r\n\r\n            {currentUser ? (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/profile\"} className=\"nav-link\">\r\n                    {currentUser.username}\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\r\n                    LogOut\r\n                  </a>\r\n                </li>\r\n              </div>\r\n            ) : (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/login\"} className=\"nav-link\">\r\n                    Login\r\n                  </Link>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/register\"} className=\"nav-link\">\r\n                    Sign Up\r\n                  </Link>\r\n                </li>\r\n              </div>\r\n            )}\r\n          </nav>\r\n\r\n          <div className=\"container mt-3\">\r\n            <Switch>\r\n              <Route exact path={[\"/\", \"/home\"]} component={Home} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/login/reset\" component={Reset} />\r\n              <Route exact path=\"/changepassword\" component={Changepassword} />\r\n              <Route exact path=\"/register\" component={Register} />\r\n              <Route exact path=\"/completeregister\" component={CompleteRegister} />\r\n              <Route exact path=\"/profile\" component={Profile} />\r\n              <Route path=\"/user\" component={BoardUser} />\r\n            \r\n              <Route path=\"/mod\" component={BoardModerator} />\r\n              <Route path=\"/admin\" component={BoardAdmin} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}